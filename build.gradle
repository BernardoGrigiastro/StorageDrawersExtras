buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle.forge'

evaluationDependsOn(":..:StorageDrawers-${minecraft_base_version}")

ext {
    chameleon = project(":..:Chameleon-${minecraft_base_version}")
    storagedrawers = project(":..:StorageDrawers-${minecraft_base_version}")
}

version = "${minecraft_version}-${mod_version}"
group= "com.jaquadro.minecraft.storagedrawers" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "StorageDrawersExtras"

idea {
  module.iml.withXml {
    def atts = it.asNode().component.content.sourceFolder
      .find { it.@url == 'file://$MODULE_DIR$/resources' }
      .attributes()
    atts.put('type', 'java-resource')
  }
}

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = chameleon.forge_version
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = chameleon.forge_mappings

    replaceIn "StorageDrawersExtras.java"
    replace '@VERSION@', project.version
    replace 'required-after:storagedrawers', "required-after:storagedrawers@[${storagedrawers_version},${storagedrawers_max_version})"
}

sourceSets.main {
    java {
        srcDirs project.projectDir.getPath() + '/src'
    }
    resources {
        srcDirs project.projectDir.getPath() + '/resources'
    }
}

sourceSets.api {
    java {
        //srcDirs project.projectDir.getPath() + '/api'
    }
}

repositories {
    maven { // JEI
        name = "JEI repo"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven { // CraftTweaker
        name = "jared maven"
        url "http://maven.blamejared.com/"
    }
    maven { // HWYLA
        name = "HWYLA repo"
        url "http://tehnut.info/maven"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven"
    }
}

dependencies {
    compile chameleon
    compile storagedrawers

    //compile project(path: ":..:Chameleon-1.10", transitive: false)
    //compile project(path: ":..:StorageDrawers-1.10", transitive: false)
    //compile project(path: ':', transitive: false)
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives deobfJar
}